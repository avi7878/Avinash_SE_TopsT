1.What do you understand By Database

--> A database is an organized collection of structured information, or data, typically stored electronically in a computer system. A database is usually controlled by a database management system (DBMS).


2.What is Normalization?

--> Normalization is a database design technique that reduces data redundancy and eliminates undesirable characteristics like Insertion.

3.What is Difference between DBMS and RDBMS?

--> DBMS stands for Database Management System. 
--> RDBMS is the acronym for the Relational Database Management system.
--> In DBMS, Data stored is in file format.
--> In RDBMS, Data stored is in table format.
--> In DBMS, Data is stored in a small quantity.
--> In RDBMS, Data is stored in a large amount.
--> In DBMS, There is normalization.
--> In RDBMS, Normalization is not achievable.
--> In DBMS, Not Support distributed database.
--> In RDBMS, Support distributed database.

4.What is MF Cod Rule of RDBMS Systems?

--> Rule 0 − Foundation rule

Any relational database management system that is propounded to be RDBMS or advocated to be a RDBMS should be able to manage the stored data in its entirety through its relational capabilities.

Rule 1 − Rule of Information

Relational Databases should store the data in the form of relations. Tables are relations in Relational Database Management Systems. Be it any user defined data or meta-data, it is important to store the value as an entity in the table cells.

Rule 2 − Rule of Guaranteed Access

The use of pointers to access data logically is strictly forbidden. Every data entity which is atomic in nature should be accessed logically by using a right combination of the name of table, primary key represented by a specific row value and column name represented by attribute value.

Rule 3 − Rule of Systematic Null Value Support

Null values are completely supported in relational databases. They should be uniformly considered as ‘missing information’. Null values are independent of any data type. They should not be mistaken for blanks or zeroes or empty strings. Null values can also be interpreted as ‘inapplicable data’ or ‘unknown information.’

Rule 4 − Rule of Active and online relational Catalog

In the Database Management Systems lexicon, ‘metadata’ is the data about the database or the data about the data. The active online catalog that stores the metadata is called ‘Data dictionary’. The so called data dictionary is accessible only by authored users who have the required privileges and the query languages used for accessing the database should be used for accessing the data of data dictionary.

Rule 5 − Rule of Comprehensive Data Sub-language

A single robust language should be able to define integrity constraints, views, data manipulations, transactions and authorizations. If the database allows access to the aforementioned ones, it is violating this rule.

Rule 6 − Rule of Updating Views

Views should reflect the updates of their respective base tables and vice versa. A view is a logical table which shows restricted data. Views generally make the data readable but not modifiable. Views help in data abstraction.

Rule 7 − Rule of Set level insertion, update and deletion

A single operation should be sufficient to retrieve, insert, update and delete the data.

Rule 8 − Rule of Physical Data Independence

Batch and end user operations are logically separated from physical storage and respective access methods.

Rule 9 − Rule of Logical Data Independence

Batch and end users can change the database schema without having to recreate it or recreate the applications built upon it.

Rule 10 − Rule of Integrity Independence

Integrity constraints should be available and stored as metadata in data dictionary and not in the application programs.

Rule 11 − Rule of Distribution Independence

The Data Manipulation Language of the relational system should not be concerned about the physical data storage and no alterations should be required if the physical data is centralized or distributed.

Rule 12 − Rule of Non Subversion

Any row should obey the security and integrity constraints imposed. No special privileges are applicable.



5.What do you understand By Data Redundancy?
==> Data redundancy refers to the duplication of data within a database or information system. It occurs when the same piece of data is stored in multiple places or when multiple copies of the same data are kept in the same location.



6.What is DDL Interpreter? 
==>  A DDL (Data Definition Language) interpreter is a component of a database management system that is responsible for executing commands that define the structure and organization of a database.
       DDL statements are used to create, modify, and delete database objects such as tables, indexes, and views. The interpreter receives these statements from a user or application and translates them into     actions that create, modify, or delete the specified database objects.

7.What is DML Compiler in SQL? 
==>  DML stands for Data Manipulation Language, and it is a subset of SQL (Structured Query Language) used for manipulating and querying data stored in a database.
      A DML compiler is a component of a database management system that processes and executes Data Manipulation Language (DML) statements such as SELECT, INSERT, UPDATE, DELETE, and other SQL statements that are used to manipulate data stored in the database.

8.What is SQL Key Constraints writing an Example of SQL Key Constraints?
==> SQL key constraints are rules applied to a database table to ensure the uniqueness and integrity of its data. There are different types of key constraints in SQL, including primary keys, foreign keys, unique keys, and check constraints.
   1)  Primary Key Constraint: A primary key is a unique identifier for a row in a table. The primary key constraint ensures that the primary key column contains only unique values and cannot contain null values.
   2)  Foreign Key Constraint: A foreign key is a column or a set of columns in a table that refers to the primary key of another table. The foreign key constraint ensures that the values in the foreign key column(s) exist in the referenced table's primary key column(s).    
   3)  Unique Key Constraint: A unique key constraint ensures that a column or a set of columns in a table contain only unique values. Unlike the primary key constraint, a unique key constraint can allow null values.


9.  What is save Point? How to create a save Point write a Query?
==> A savepoint is a point within a transaction where you can roll back to a specific point without rolling back the entire transaction. Savepoints are useful when you want to group a series of related operations within a larger transaction and provide a way to undo only part of the transaction if needed.
   
   Query :-
		SAVEPOINT my_savepoint;


10. What is trigger and how to create a Trigger in SQL?
==>  A trigger is a database object that automatically executes in response to specific events or changes that occur in the database. Triggers are often used to enforce business rules, perform auditing, or maintain referential integrity between tables.

   Query :-
		CREATE TABLE table_name AFTER INSERT ON table1 FOR EACH ROW
		BEGIN
			INSERT INTO TABLE2(COLUMNAME1,COLUMNAME2,......) VALUES(COLUMNAME OF TABLE2, ....);
		END





